% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bf_grow.R
\name{bf_grow}
\alias{bf_grow}
\title{Add flags to a registry}
\usage{
bf_grow(
  flags,
  name = NULL,
  desc = NULL,
  na = NULL,
  pos = NULL,
  registry = NULL
)
}
\arguments{
\item{flags}{\code{\link[=function]{function(.)}}\cr a function that returns a vector of
flags.}

\item{name}{\code{\link[=character]{character(1)}}\cr the internal name of the bit
flag(s).}

\item{desc}{\code{\link[=character]{character(1)}}\cr the description of the bit
flag(s).}

\item{na}{\code{\link[=numeric]{numeric(1)}} | \code{\link[=character]{character(1)}} |
\code{\link[=logical]{logical(1)}}\cr which value NAs in the output of \code{flags}
should have in the registry.}

\item{pos}{\code{\link[=integer]{integerish(.)}}\cr the position(s) in the bitfield that
should be set.}

\item{registry}{\code{\link[=registry]{registry(1)}}\cr the registry in which the bit
flag(s) should be stored.}
}
\description{
Add flags to a registry
}
\details{
In case you don't use a native function to build flags, the name
should be of the form \code{activity_entity}, where 'activity' succinctly
describes the function and 'entity' the object(s) or column(s) used by the
function (if it's more than one object/column, they need to be concatenated
with using a "_", as this is used internally to determine the provenance of
the function). Both terms are from the
\href{https://www.w3.org/TR/2013/REC-prov-dm-20130430/}{PROV Data Model}.

There are two basic types of flags distinguished by their output value. A
flag can consist of one bit or of more than on bit. Flags that consists of
only one bit are from tests that return FALSE/TRUE values: \itemize{
\item where a column is tested against an individual value, such as
\code{\link{bf_na}}, \code{\link{bf_nan}}, \code{\link{bf_null}},
\code{\link{bf_inf}} or \code{\link{bf_type}}.
\item where a column is tested against a set of values, such as
\code{\link{bf_match}} or \code{\link{bf_range}}.
\item where a column is compared with another column, such as
\code{\link{bf_identical}}.
}
Flags that consist of a sequence of bits are either from tests that return
a (small) number of cases, or from tests that return a (set of) numeric
values: \itemize{
\item where a categorical value is returned, such as \code{\link{bf_case}}
(where the cases can be represented by integers from 1 to X).
\item where a count value is returned, such as \code{\link{bf_length}}
(that may not include 0 and that may be quite large).
\item where a numeric value (floating-point number) of any kind is
returned, such as \code{\link{bf_numeric}}.
\item where a set of numeric values is returned, such as
\code{\link{bf_distribution}}, \code{\link{bf_histogram}},
\code{\link{bf_residuals}} or \code{\link{bf_summarise}} (which are
basically compound flags that are stored in the registry individually)
}
}
\examples{
flags1 <- bf_na(x = example_data, test = "x")  # build flag for NAs
flags2 <- bf_range(x = example_data, test = "x",
                   min = -180, max = 180)       # build flag for range

registry <- bf_grow(flags = flags1, pos = 1)   # start registry ...
registry <- bf_grow(flags = flags2, pos = 2,
                    registry = registry)       # ... and update it
}
