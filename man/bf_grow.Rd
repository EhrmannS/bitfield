% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bf_grow.R
\name{bf_grow}
\alias{bf_grow}
\title{Add flags to a registry}
\usage{
bf_grow(
  flags,
  name = NULL,
  desc = NULL,
  na = NULL,
  pos = NULL,
  registry = NULL
)
}
\arguments{
\item{flags}{\code{\link[=function]{function(.)}}\cr a function that returns a vector of flags.}

\item{name}{\code{\link[=character]{character(1)}}\cr the internal name of the bit
flag(s).}

\item{desc}{\code{\link[=character]{character(1)}}\cr the description of the bit
flag(s).}

\item{na}{\code{\link[=numeric]{numeric(1)}} | \code{\link[=character]{character(1)}} |
\code{\link[=logical]{logical(1)}}\cr which value NAs in the output of \code{flags}
should have in the registry.}

\item{pos}{\code{\link[=integer]{integerish(.)}}\cr the position(s) in the bitfield that
should be set.}

\item{registry}{\code{\link[=registry]{registry(1)}}\cr the registry in which the bit
flag(s) should be stored.}
}
\description{
Add flags to a registry
}
\details{
In case you don't use a native function to build flags, to end up
with useful triples, the \code{name} should be formulated in one of three
ways: \enumerate{
\item in case the function has a logical return value, the name will be
paired with \code{'...|is|[TRUE,FALSE]'}
\item in case the function has a integer return value, the name will be
paired with \code{'...|is_case|[case1:caseN]'} and
\item in case the function has a numeric return value, the name will be
paired with \code{'BIT|decodes_to|...'}
}

The following set of flags can be built with \code{bitfield} operators:
\itemize{
\item flags where a column is tested against some condition, such as
\code{\link{bf_na}}, \code{\link{bf_nan}}, \code{\link{bf_null}} and
\code{\link{bf_inf}} (output length 1).
\item flags where an attribute is identified from a small set of possible
choices, such as \code{\link{bf_decimals}}, \code{\link{bf_length}} or
\code{\link{bf_type}} (output length 1).
\item flags where a column is compared with another column (of the same
length) or a set of values (of another length), such as
\code{\link{bf_identical}}, \code{\link{bf_match}} and
\code{\link{bf_range}} (output length 1).
\item flags where the categorical values of a test are combined into a
compound flag, such as \code{\link{bf_case}} (output length > 1)
\item flags where a particular numeric value is encoded as bit value, such as
\code{\link{bf_distribution}} and \code{\link{bf_residuals}}. (output
length depending on floating-point precision)
\item flags where relation between objects is recorded, including the output
of other bitfield operators.
}
}
\examples{
flags1 <- bf_na(x = example_data, test = "x")  # build flag for NAs
flags2 <- bf_range(x = example_data, test = "x",
                  min = -180, max = 180)       # build flag for range

registry <- bf_grow(flags = flags1, pos = 1)   # start registry ...
registry <- bf_grow(flags = flags1, pos = 2,
                    registry = registry)       # ... and update it
}
